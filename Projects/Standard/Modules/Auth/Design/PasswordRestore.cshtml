@using Auth
@model Auth.Model.PasswordRestore
@{ 
    Layout = "baseAuth.cshtml";
    Title = "Восстановление пароля";
}

@section breadcrumbs {
    <!-- (breadcrumbs) -->
    <div class="breadcrumbs inner-breadcrumbs">
        <div class="breadcrumbs__cover cover">
            <div class="breadcrumbs__links">
                <a typeof="v:Breadcrumb" href="/" class="breadcrumbs__link">Главная</a>
                <span class="breadcrumbs__arrow"></span>
                <p class="breadcrumbs__last">Восстановление пароля</p>
            </div>
        </div>
    </div>
    <!-- End (breadcrumbs) -->
}

@section scripts {
    <script>
    $(function ()
    {
        $("input[name='email'], input[name='phone']").on('keyup change', function ()
        {
            if ($("input[name='email']").val().length > 0 && $("input[name='phone']").val().length > 0)
            {
                $("div#js-restore__form-result").text("Укажите либо адрес электронной почты, либо номер телефона.");
            }
            else
            {
                if ($("div#js-restore__form-result:contains('Укажите либо адрес электронной почты, либо номер телефона.')").length > 0)
                    $("div#js-restore__form-result").text("");
            }
        });

        $("form#js-restore__form").requestJSON({
            before: function ()
            {
                @if (this.GetConfig().userAuthorizeAllowed == Core.Users.eUserAuthorizeAllowed.EmailAndPhone)
                {
                    <text>
                    if ($("input[name='email']", this).val().length > 0 && $("input[name='phone']", this).val().length > 0)
                    {
                        $("div#js-restore__form-result").text("Укажите либо адрес электронной почты, либо номер телефона.");
                        return;
                    }
                    </text>
                }

                $("div#js-restore__form-result").html("<img src='/data/img/loading.gif'>");
            },
            after: function (result, message, data)
            {
                $("div#js-restore__form-result").html(nl2br(message));
                if (result == JsonResult.OK)
                {
                    $("form#js-restore__form").remove();
                    var location = "/@this.GetModule().UrlName/restore3/";
                    if (data != undefined && data != null && data.length > 0) location = location + "?CodeType=" + data;
                    window.location = location;
                }
            }
        });
    });
    </script>
}


<div class="login-block">
    <div class="cover">
        <div class="login-block-inner">
            <h1>Восстановление пароля</h1>
            <div class="enter-block" id="enter_reg">
                @if (this.GetConfig().userAuthorizeAllowed != Core.Users.eUserAuthorizeAllowed.Nothing)
                {
                    <form action='@(Url.CreateRoute<ModuleAuth, ModuleAuthController>(x => x.PasswordRestoreSend(null)))' method='post' id="js-restore__form">
                        <div class="login-form__row center-row">
                            @if (this.GetConfig().userAuthorizeAllowed == Core.Users.eUserAuthorizeAllowed.EmailAndPhone)
                            {<text>Введите адрес электронной почты или номер телефона, указанные при регистрации</text> }
                        else if (this.GetConfig().userAuthorizeAllowed == Core.Users.eUserAuthorizeAllowed.OnlyEmail)
                        { <text>Введите адрес электронной почты, указанный при регистрации</text> }
                    else if (this.GetConfig().userAuthorizeAllowed == Core.Users.eUserAuthorizeAllowed.OnlyPhone)
                    { <text>Введите номер телефона, указанный при регистрации</text>}
                        </div>
                        @if (this.GetConfig().userAuthorizeAllowed == Core.Users.eUserAuthorizeAllowed.OnlyEmail || this.GetConfig().userAuthorizeAllowed == Core.Users.eUserAuthorizeAllowed.EmailAndPhone)
                        {
                            <div class="login-form__row">
                                @Html.TextBoxFor(model => model.email, new { @class = "style-input", placeholder = Html.DisplayNameFor(model => model.email) })
                                @Html.ValidationMessageFor(model => model.email)
                                @Html.ValidationMessageFor(model => model.EmailOrPhone)
                            </div>
                        }
                        @if (this.GetConfig().userAuthorizeAllowed == Core.Users.eUserAuthorizeAllowed.OnlyPhone || this.GetConfig().userAuthorizeAllowed == Core.Users.eUserAuthorizeAllowed.EmailAndPhone)
                        {
                            <div class="login-form__row">
                                @Html.TextBoxFor(model => model.phone, new { @class = "style-input", placeholder = Html.DisplayNameFor(model => model.phone) })
                                @Html.ValidationMessageFor(model => model.phone)
                                @Html.ValidationMessageFor(model => model.EmailOrPhone)
                            </div>
                        }
                        <div class="login-form__row">
                            @Html.RecaptchaInvisible("Продолжить", new { @class = "input-submit" })
                        </div>
                        <div class="login-form__row login-links">
                            <a href="/reg" title="">Регистрация</a>
                        </div>
                    </form>
                }
                <div id="js-restore__form-result">
                    @if (this.GetConfig().userAuthorizeAllowed == Core.Users.eUserAuthorizeAllowed.Nothing)
                    {<text>К сожалению, в данный момент на сайте отключена авторизация и восстановление пароля невозможно.</text>}
                </div>
            </div>
        </div>
    </div>
</div>

