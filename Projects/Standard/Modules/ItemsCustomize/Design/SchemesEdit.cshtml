@using ItemsCustomize.Model
@model Fields
@{ var moduleAdmin = this.GetAppCore().Get<Admin.ModuleAdmin>(); }

<style type="text/css">
    .placeholder {
        outline: 1px dashed #4183C4;
    }

    .mjs-nestedSortable-error {
        background: #fbe3e4;
        border-color: transparent;
    }

    #tree {
        width: 550px;
        margin: 0;
    }

    ol {
        max-width: 100%;
        padding: 0px;
        margin: 0px;
    }

        ol.sortable, ol.sortable ol {
            list-style-type: none;
        }

    .sortable li div {
        border: 1px solid #d4d4d4;
        -webkit-border-radius: 3px;
        -moz-border-radius: 3px;
        border-radius: 3px;
        cursor: move;
        border-color: #D4D4D4 #D4D4D4 #BCBCBC;
        margin: 0;
        padding: 3px;
    }

    .sortable span.ui-icon {
        display: inline-block;
        margin: 0;
        padding: 0;
    }

    .menuDiv {
        background: #EBEBEB;
    }

    .menuEdit {
        background: #FFF;
    }

    .itemTitle {
        vertical-align: middle;
        cursor: pointer;
    }

    .deleteMenu {
        float: right;
        cursor: pointer;
    }

    p, ol, ul, pre, form {
        margin-top: 0;
        margin-bottom: 1em;
    }

    .notice {
        color: #c33;
    }
</style>

<script type="text/javascript" src="/data/js/jquery.mjs.nestedSortable.js"></script>
<script type='text/javascript'>
    var FieldsAll = @Model.FieldsList.jsobject();

    function showResult(text)
    {
        if (text != undefined && text.length > 0)
        {
            $("#action_result").html(text);
            endAnim($("#action_result"));
        }
        else $("#action_result").hide();
    }

    $(document).ready(function () {
        $("#block").hide();
        changeTitle('Пользовательские настраиваемые поля');

        $('select[name=schemeitem_select]').change(function () {
            var val = $(this).val();
            if (val != null)
            {
                val = val.split('_', 2);
                $('div#fields_ae').html("<img src='/data/img/loading.gif'>").requestLoad("/@moduleAdmin.UrlName/madmin/@this.GetModule().UrlName/ContainerItem/@Model.IdModule/" + val[0] + "/" + val[1], null, function (result, message) {
                    if (message.length > 0) alert(message);
                });
            }
        });

        //Добавить поле.
        $('#field_add').click(function (e) {
            e.preventDefault();

            $("#fields_ae").html("<img src='/data/img/loading.gif'>").requestLoad('/@moduleAdmin.UrlName/madmin/@this.GetModule().UrlName/fieldEdit/@Model.IdModule/0', null, function(){});
        });

        //Редактировать поле.
        $('#field_edit').click(function () {
            $("#fields_ae").html("<img src='/data/img/loading.gif'>").requestLoad('/@moduleAdmin.UrlName/madmin/@this.GetModule().UrlName/fieldEdit/@Model.IdModule/' + $('#fields_for_select option:selected:first').val(), null, function(){});
        });

        //Удалить поле.
        $('#field_del').click(function () {
            $('#fields_for_select option:selected').each(function () {
                if (confirm('Вы действительно хотите удалить поле "' + $(this).text() + '"?')) {
                    var option = $(this);
                    showResult();
                    $.requestJSON("/@moduleAdmin.UrlName/madmin/@this.GetModule().UrlName/fieldDelete/" + $(this).val(), null, function (result, message) {
                        if (result == JsonResult.OK) option.remove();
                        if (message.length > 0) showResult(message);
                    });
                }
            });
        });

        @if (!Model.AllowSchemesManage)
        {
		    <text>$("#scheme_remove, #scheme_add").attr('disabled', true).attr('title', "Изменение схем запрещено в данном модуле");</text>
        }

        var lengthOptgroup = $("select[name=schemeitem_select] optgroup").length;
        var length = $("select[name=schemeitem_select] option").length;
        var size = parseInt($("select[name=schemeitem_select]").attr('size'));
        if (length < size)
        {
            $("select[name=schemeitem_select]").attr('size', length + lengthOptgroup);
            var size2 = parseInt($("select#fields_for_select").attr('size'));
            size2 = size2 + size - length;
            $("select#fields_for_select").attr('size', size2);
        }

        $("select[name=schemeitem_select]").val(0).change();

        $("input#fieldsFilter").bind('change keyup', function(){
            var value = $(this).val().toLowerCase();
            var options = $(this).data('options');
            if (options == null)
            {
                var d = {};
                $.each($("select#fields_for_select option"), function(k, v){
                    d[$(v).val()] = $(v).text();
                });
                $(this).data('options', d);

                options = d;
            }

            $("select#fields_for_select option").remove();
            $.each(options, function(k, v){
                if (v.toLowerCase().indexOf(value) >= 0)
                {
                    $("select#fields_for_select").append($("<option></option>").val(k).text(v));
                }
            });

        });
    });
</script>

<table width='100%'>
    <tr valign='top'>
        <td>

            <h2>Настраиваемые поля | <a href='' id="field_add">Добавить поле</a></h2>

            <table id="items_results" class='admtable' style='width:370px;'>
                <tr>
                    <th>Список полей:</th>
                </tr>
                <tr>
                    <td>
                        Выберите объект:<br>
                        <select name='schemeitem_select' style='width:100%;' size='20'>
                            @foreach (var p in Model.SchemeItems)
                            {
                                <optgroup label="@p.Key.NameItemType">
                                    @foreach (var item in p.Value)
                                    {
                                        var key = $"{item.Key.IdItem}_{item.Key.IdItemType}";
                                        <option value="@key">@item.Value (#id @item.Key.IdItem)</option>
                                    }
                                </optgroup>
                            }
                        </select><br><br>

                        Выберите поле: (фильтр: <input type="text" id="fieldsFilter" />)<br>
                        <select id='fields_for_select' multiple size='20' style='width:100%;margin-top:4px;'>
                            @foreach (var field in Model.FieldsList)
                            {
                                <option value='@field.Key'>@field.Value.name (#id @field.Key)</option>
                            }
                        </select><br>
                        <input type='button' class='button' id='field_toscheme' value='В схему'> <input type='button' class='button' id='field_edit' value='Редактировать'> <input type='button' class='button' id='field_del' value='Удалить'><br>

                        <br>

                        <div id='fields_result'></div>
                    </td>
                </tr>
            </table>

        </td>
        <td><div style='width:20px;'></div></td>
        <td style="width:100%;">
            <div id='fields_ae'></div>
        </td>
    </tr>
</table>